
class Program
{
    static void Main()
    {
        // Суть паттерна Observer в том, что множество объектов могут быть потребителями информации из одного источника.
        // В таком случае они как раз и являются наблюдателями, подписанными на этот один ресурс.
        // При изменении наблюдаемого объекта автоматически происходит оповещение всех наблюдателей. 

        // Второе название этого паттерна — Publisher-Subscriber, и он довольно часто встречается при взаимодействии распределённых систем. 

        // Когда стоит использовать? 
        // Наша система содержит множество классов, причем состояние объектов должно быть синхронизировано.
        
        // Если есть две стороны: одна из них рассылает сообщения и является главной, другая должна получать и реагировать.
        // При этом логика разделена, а системы могут рассматриваться и использоваться независимо друг от друга.
        
        // Если существует один объект-источник сообщений, а у него есть множество подписчиков. Количество последних при этом заранее неизвестно и может меняться в процессе работы программы.
    }
}